name: Test building

on:    
   workflow_dispatch:
     inputs:
       tag-repo1:
         type: string
         description: 'Branch for repo1 (default: main)'
         required: false
         default: main      
       tag-repo2:
         type: string
         description: 'Branch for repo2 (default: main)'
         required: false
         default: main

   push:
     tags:
     - '*'

jobs:
  build-and-push-dev:    
    runs-on: ubuntu-22.04
    if: github.event_name == 'workflow_dispatch'
    steps:
          
      # We checkout all the repos required to build the Dockerfile 
      # They are cloned under $GITHUB_WORKSPACE
      # $GITHUB_WORKSPACE = /home/runner/work/repo1/repo1
      # repo1 = /home/runner/work/repo1/repo1/repo1
      # repo2 = /home/runner/work/repo1/repo1/repo2
      - name: Check out repo1
        uses: actions/checkout@v2
        with:
          path: repo1
          ref:  ${{ inputs.tag-repo1 }}
          
      - name: Check out repo2
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.CHECKOUT_REPOS }}
          repository: test-organization-token/repo2
          path: repo
          ref:  ${{ inputs.tag-repo2 }}
            
      - name: Publish real to Github Container Registry
        uses: elgohr/Publish-Docker-Github-Action@main
        if: github.event.inputs.tag-repo1 != 'main' || github.event.inputs.tag-repo2 != 'main' 
        with:
          name: test-organization-token/test-image
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          dockerfile: repo1/dockerfiles/Dockerfile 
          workdir: /home/runner/work/repo1/repo1
          tags: dev
                 
      - name: Publish real to Github Container Registry
        uses: elgohr/Publish-Docker-Github-Action@main
        if: github.event.inputs.tag-repo1 == 'main' && github.event.inputs.tag-repo2 == 'main' 
        with:
          name: test-organization-token/test-image
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          dockerfile: repo1/dockerfiles/Dockerfile 
          workdir: /home/runner/work/repo1/repo1
          tags: latest
          
  build-and-push-tag:
    runs-on: ubuntu-22.04
    if: github.event_name == 'push'
    steps:
      - name: Get tag
        id: tag
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
          
      # We checkout all the repos required to build the Dockerfile 
      # They are cloned under $GITHUB_WORKSPACE
      # $GITHUB_WORKSPACE = /home/runner/work/repo1/repo1
      # repo1 = /home/runner/work/repo1/repo1/repo1
      # repo2 = /home/runner/work/repo1/repo1/repo2
      - name: Check out repo1
        uses: actions/checkout@v2
        with:
          path: repo1
          ref: ${{steps.tag.outputs.tag}}

      - name: Check out repo2
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.CHECKOUT_REPOS }}
          repository: test-organization-token/repo2
          path: repo2
          ref: ${{steps.tag.outputs.tag}}
            
      - name: Publish real to Github Container Registry
        uses: elgohr/Publish-Docker-Github-Action@main
        with:
          name: test-organization-token/test-image
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          dockerfile: repo1/dockerfiles/Dockerfile 
          workdir: /home/runner/work/repo1/repo1
          tag_names: true # we use tags/release by their git name (main branch pused as latest)
